; generated by Component: ARM Compiler 5.05 update 1 (build 106) Tool: ArmCC [4d0efa]
; commandline ArmCC [--c99 --list --split_sections --debug -c --asm --interleave -o.\flash\obj\stm32f10x_it.o --asm_dir=.\Flash\List\ --list_dir=.\Flash\List\ --depend=.\flash\obj\stm32f10x_it.d --cpu=Cortex-M3 --apcs=interwork -O0 --diag_suppress=9931 -I..\..\Libraries\CMSIS\CM3\CoreSupport -I..\..\Libraries\CMSIS\CM3\DeviceSupport\ST\STM32F10x -I..\..\Libraries\STM32F10x_StdPeriph_Driver\inc -I..\..\Libraries\STM32_USB-FS-Device_Driver\inc -I..\..\User\usb_virture_com -I..\..\User -I..\..\User\bsp -I..\..\User\Driver\IIC -I..\..\User\Driver\LED -I..\..\User\Driver\TIM -I..\..\User\Driver\SPI -I..\..\User\Driver\ADC -I..\..\User\Driver\Delay -I..\..\User\Driver\UART -I..\..\User\Driver\MOTOR -I..\..\User\Driver\PWM_IN -I..\..\User\Driver\EEPROM -I..\..\User\Modules\Modules_mpu6050 -I..\..\User\Modules\Modules_nrf24L01 -I..\..\User\Modules\Modules_hmc5883 -I..\..\User\Algorithm\Algorithm_filter -I..\..\User\Algorithm\Algorithm_math -I..\..\User\Algorithm\Algorithm_sqLite -I..\..\User\Algorithm\Algorithm_quaternion -I..\..\User\Function\MultiRotor_rc -I..\..\User\Function\MultiRotor_app -I..\..\User\Function\MultiRotor_ahrs -I..\..\User\Function\MultiRotor_radio -I..\..\User\Function\MultiRotor_control -I..\..\User\Modules\Modules_oled -Id:\Keil_v5\ARM\RV31\INC -Id:\Keil_v5\ARM\CMSIS\Include -Id:\Keil_v5\ARM\PACK\ARM\CMSIS\4.2.0\Device\ARM\ARMCM3\Include -D__MICROLIB -D__UVISION_VERSION=514 -DSTM32F10X_HD -DUSE_STDPERIPH_DRIVER --omf_browse=.\flash\obj\stm32f10x_it.crf ..\..\User\stm32f10x_it.c]
                          THUMB

                          AREA ||i.BusFault_Handler||, CODE, READONLY, ALIGN=1

                  BusFault_Handler PROC
;;;84     */    
;;;85     void BusFault_Handler(void)
000000  bf00              NOP      
                  |L1.2|
;;;86     {
;;;87       /* 当总线异常时进入死循环 */
;;;88       while (1)
000002  e7fe              B        |L1.2|
;;;89       {
;;;90       }
;;;91     }
;;;92     
                          ENDP


                          AREA ||i.DebugMon_Handler||, CODE, READONLY, ALIGN=1

                  DebugMon_Handler PROC
;;;128    */   
;;;129    void DebugMon_Handler(void)
000000  4770              BX       lr
;;;130    {
;;;131    }
;;;132    
                          ENDP


                          AREA ||i.HardFault_Handler||, CODE, READONLY, ALIGN=1

                  HardFault_Handler PROC
;;;52     */ 
;;;53     void HardFault_Handler(void)
000000  bf00              NOP      
                  |L3.2|
;;;54     {
;;;55       /* 当硬件失效异常发生时进入死循环 */
;;;56       while (1)
000002  e7fe              B        |L3.2|
;;;57       {
;;;58       }
;;;59     }
;;;60     
                          ENDP


                          AREA ||i.MemManage_Handler||, CODE, READONLY, ALIGN=1

                  MemManage_Handler PROC
;;;68     */   
;;;69     void MemManage_Handler(void)
000000  bf00              NOP      
                  |L4.2|
;;;70     {
;;;71       /* 当内存管理异常发生时进入死循环 */
;;;72       while (1)
000002  e7fe              B        |L4.2|
;;;73       {
;;;74       }
;;;75     }
;;;76     
                          ENDP


                          AREA ||i.NMI_Handler||, CODE, READONLY, ALIGN=1

                  NMI_Handler PROC
;;;40     */  
;;;41     void NMI_Handler(void)
000000  4770              BX       lr
;;;42     {
;;;43     }
;;;44     
                          ENDP


                          AREA ||i.PendSV_Handler||, CODE, READONLY, ALIGN=1

                  PendSV_Handler PROC
;;;140    */     
;;;141    void PendSV_Handler(void)
000000  4770              BX       lr
;;;142    {
;;;143    }
;;;144    
                          ENDP


                          AREA ||i.SVC_Handler||, CODE, READONLY, ALIGN=1

                  SVC_Handler PROC
;;;116    */   
;;;117    void SVC_Handler(void)
000000  4770              BX       lr
;;;118    {
;;;119    }
;;;120    
                          ENDP


                          AREA ||i.TIM3_IRQHandler||, CODE, READONLY, ALIGN=2

                  TIM3_IRQHandler PROC
;;;14     
;;;15     void TIM3_IRQHandler(void)		    //2ms中断一次
000000  b510              PUSH     {r4,lr}
;;;16     {	
;;;17     	if(TIM3->SR & TIM_IT_Update)	{    
000002  480b              LDR      r0,|L8.48|
000004  8800              LDRH     r0,[r0,#0]
000006  f0000001          AND      r0,r0,#1
00000a  b178              CBZ      r0,|L8.44|
;;;18         TIM3->SR = ~TIM_FLAG_Update;//清除中断标志	
00000c  f64f70fe          MOV      r0,#0xfffe
000010  4907              LDR      r1,|L8.48|
000012  8008              STRH     r0,[r1,#0]
;;;19     		
;;;20     		Time_slice();
000014  f7fffffe          BL       Time_slice
;;;21     		RDAU();
000018  f7fffffe          BL       RDAU
;;;22      		AHRS_Geteuler();
00001c  f7fffffe          BL       AHRS_Geteuler
;;;23     		Calculate_Target();
000020  f7fffffe          BL       Calculate_Target
;;;24      		CONTROL(Target);	
000024  4803              LDR      r0,|L8.52|
000026  c80f              LDM      r0,{r0-r3}
000028  f7fffffe          BL       CONTROL
                  |L8.44|
;;;25     	}
;;;26     }
00002c  bd10              POP      {r4,pc}
;;;27     /*
                          ENDP

00002e  0000              DCW      0x0000
                  |L8.48|
                          DCD      0x40000410
                  |L8.52|
                          DCD      Target

                          AREA ||i.USB_LP_CAN1_RX0_IRQHandler||, CODE, READONLY, ALIGN=1

                  USB_LP_CAN1_RX0_IRQHandler PROC
;;;174    extern void usb_Istr(void);
;;;175    void USB_LP_CAN1_RX0_IRQHandler(void)
000000  b510              PUSH     {r4,lr}
;;;176    {
;;;177    	usb_Istr();
000002  f7fffffe          BL       usb_Istr
;;;178    }
000006  bd10              POP      {r4,pc}
;;;179    
                          ENDP


                          AREA ||i.UsageFault_Handler||, CODE, READONLY, ALIGN=1

                  UsageFault_Handler PROC
;;;100    */   
;;;101    void UsageFault_Handler(void)
000000  bf00              NOP      
                  |L10.2|
;;;102    {
;;;103      /* 当用法异常时进入死循环 */
;;;104      while (1)
000002  e7fe              B        |L10.2|
;;;105      {
;;;106      }
;;;107    }
;;;108    
                          ENDP

