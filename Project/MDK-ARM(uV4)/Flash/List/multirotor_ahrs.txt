; generated by Component: ARM Compiler 5.05 update 1 (build 106) Tool: ArmCC [4d0efa]
; commandline ArmCC [--c99 --list --split_sections --debug -c --asm --interleave -o.\flash\obj\multirotor_ahrs.o --asm_dir=.\Flash\List\ --list_dir=.\Flash\List\ --depend=.\flash\obj\multirotor_ahrs.d --cpu=Cortex-M3 --apcs=interwork -O0 --diag_suppress=9931 -I..\..\Libraries\CMSIS\CM3\CoreSupport -I..\..\Libraries\CMSIS\CM3\DeviceSupport\ST\STM32F10x -I..\..\Libraries\STM32F10x_StdPeriph_Driver\inc -I..\..\Libraries\STM32_USB-FS-Device_Driver\inc -I..\..\User\usb_virture_com -I..\..\User -I..\..\User\bsp -I..\..\User\Driver\IIC -I..\..\User\Driver\LED -I..\..\User\Driver\TIM -I..\..\User\Driver\SPI -I..\..\User\Driver\ADC -I..\..\User\Driver\Delay -I..\..\User\Driver\UART -I..\..\User\Driver\MOTOR -I..\..\User\Driver\PWM_IN -I..\..\User\Driver\EEPROM -I..\..\User\Modules\Modules_mpu6050 -I..\..\User\Modules\Modules_nrf24L01 -I..\..\User\Modules\Modules_hmc5883 -I..\..\User\Algorithm\Algorithm_filter -I..\..\User\Algorithm\Algorithm_math -I..\..\User\Algorithm\Algorithm_sqLite -I..\..\User\Algorithm\Algorithm_quaternion -I..\..\User\Function\MultiRotor_rc -I..\..\User\Function\MultiRotor_app -I..\..\User\Function\MultiRotor_ahrs -I..\..\User\Function\MultiRotor_radio -I..\..\User\Function\MultiRotor_control -I..\..\User\Modules\Modules_oled -Id:\Keil_v5\ARM\RV31\INC -Id:\Keil_v5\ARM\CMSIS\Include -Id:\Keil_v5\ARM\PACK\ARM\CMSIS\4.2.0\Device\ARM\ARMCM3\Include -D__MICROLIB -D__UVISION_VERSION=514 -DSTM32F10X_HD -DUSE_STDPERIPH_DRIVER --omf_browse=.\flash\obj\multirotor_ahrs.crf ..\..\User\Function\MultiRotor_ahrs\MultiRotor_ahrs.c]
                          THUMB

                          AREA ||i.AHRS_GetQ||, CODE, READONLY, ALIGN=2

                  AHRS_GetQ PROC
;;;69     /*====================================================================================================*/
;;;70     void AHRS_GetQ( Quaternion *pNumQ )
000000  e92d4ff0          PUSH     {r4-r11,lr}
;;;71     {
000004  b093              SUB      sp,sp,#0x4c
;;;72       fp32 ErrX, ErrY, ErrZ;
;;;73       fp32 AccX, AccY, AccZ;
;;;74       fp32 GyrX, GyrY, GyrZ;
;;;75     	fp32 Normalize;
;;;76       static fp32 exInt = 0.0f, eyInt = 0.0f, ezInt = 0.0f;
;;;77     	Gravity V;
;;;78     	
;;;79     	// 加速度归一化
;;;80     	Normalize = Q_rsqrt(squa(sensor.acc.averag.x)+ squa(sensor.acc.averag.y) +squa(sensor.acc.averag.z));
000006  4a92              LDR      r2,|L1.592|
000008  6911              LDR      r1,[r2,#0x10]
00000a  6910              LDR      r0,[r2,#0x10]
00000c  f7fffffe          BL       __aeabi_fmul
000010  4607              MOV      r7,r0
000012  4a8f              LDR      r2,|L1.592|
000014  68d1              LDR      r1,[r2,#0xc]
000016  68d0              LDR      r0,[r2,#0xc]
000018  f7fffffe          BL       __aeabi_fmul
00001c  4680              MOV      r8,r0
00001e  4a8c              LDR      r2,|L1.592|
000020  6891              LDR      r1,[r2,#8]  ; sensor
000022  6890              LDR      r0,[r2,#8]  ; sensor
000024  f7fffffe          BL       __aeabi_fmul
000028  4683              MOV      r11,r0
00002a  4641              MOV      r1,r8
00002c  f7fffffe          BL       __aeabi_fadd
000030  4606              MOV      r6,r0
000032  4639              MOV      r1,r7
000034  f7fffffe          BL       __aeabi_fadd
000038  4605              MOV      r5,r0
00003a  f7fffffe          BL       Q_rsqrt
00003e  900b              STR      r0,[sp,#0x2c]
;;;81     	AccX = sensor.acc.averag.x*Normalize;
000040  4983              LDR      r1,|L1.592|
000042  6888              LDR      r0,[r1,#8]  ; sensor
000044  990b              LDR      r1,[sp,#0x2c]
000046  f7fffffe          BL       __aeabi_fmul
00004a  9011              STR      r0,[sp,#0x44]
;;;82       AccY = sensor.acc.averag.y*Normalize;
00004c  4980              LDR      r1,|L1.592|
00004e  68c8              LDR      r0,[r1,#0xc]
000050  990b              LDR      r1,[sp,#0x2c]
000052  f7fffffe          BL       __aeabi_fmul
000056  9010              STR      r0,[sp,#0x40]
;;;83       AccZ = sensor.acc.averag.z*Normalize;
000058  497d              LDR      r1,|L1.592|
00005a  6908              LDR      r0,[r1,#0x10]
00005c  990b              LDR      r1,[sp,#0x2c]
00005e  f7fffffe          BL       __aeabi_fmul
000062  900f              STR      r0,[sp,#0x3c]
;;;84     
;;;85     	// 提取重力分量
;;;86     	V = Quaternion_vectorGravity(&NumQ);
000064  497b              LDR      r1,|L1.596|
000066  a805              ADD      r0,sp,#0x14
000068  f7fffffe          BL       Quaternion_vectorGravity
00006c  ad05              ADD      r5,sp,#0x14
00006e  9805              LDR      r0,[sp,#0x14]
000070  9008              STR      r0,[sp,#0x20]
000072  9806              LDR      r0,[sp,#0x18]
000074  9009              STR      r0,[sp,#0x24]
000076  9807              LDR      r0,[sp,#0x1c]
000078  900a              STR      r0,[sp,#0x28]
;;;87     	
;;;88     	// 向量差乘
;;;89      	ErrX = (AccY*V.z - AccZ*V.y);
00007a  9909              LDR      r1,[sp,#0x24]
00007c  980f              LDR      r0,[sp,#0x3c]
00007e  f7fffffe          BL       __aeabi_fmul
000082  4605              MOV      r5,r0
000084  990a              LDR      r1,[sp,#0x28]
000086  9810              LDR      r0,[sp,#0x40]
000088  f7fffffe          BL       __aeabi_fmul
00008c  4606              MOV      r6,r0
00008e  4629              MOV      r1,r5
000090  f7fffffe          BL       __aeabi_fsub
000094  4604              MOV      r4,r0
;;;90       ErrY = (AccZ*V.x - AccX*V.z);
000096  990a              LDR      r1,[sp,#0x28]
000098  9811              LDR      r0,[sp,#0x44]
00009a  f7fffffe          BL       __aeabi_fmul
00009e  4605              MOV      r5,r0
0000a0  9908              LDR      r1,[sp,#0x20]
0000a2  980f              LDR      r0,[sp,#0x3c]
0000a4  f7fffffe          BL       __aeabi_fmul
0000a8  4606              MOV      r6,r0
0000aa  4629              MOV      r1,r5
0000ac  f7fffffe          BL       __aeabi_fsub
0000b0  4681              MOV      r9,r0
;;;91       ErrZ = (AccX*V.y - AccY*V.x);
0000b2  9908              LDR      r1,[sp,#0x20]
0000b4  9810              LDR      r0,[sp,#0x40]
0000b6  f7fffffe          BL       __aeabi_fmul
0000ba  4605              MOV      r5,r0
0000bc  9909              LDR      r1,[sp,#0x24]
0000be  9811              LDR      r0,[sp,#0x44]
0000c0  f7fffffe          BL       __aeabi_fmul
0000c4  4606              MOV      r6,r0
0000c6  4629              MOV      r1,r5
0000c8  f7fffffe          BL       __aeabi_fsub
0000cc  4682              MOV      r10,r0
;;;92      	
;;;93      	exInt = exInt + ErrX * KiDef;
0000ce  4962              LDR      r1,|L1.600|
0000d0  4620              MOV      r0,r4
0000d2  f7fffffe          BL       __aeabi_fmul
0000d6  4605              MOV      r5,r0
0000d8  4860              LDR      r0,|L1.604|
0000da  6801              LDR      r1,[r0,#0]  ; exInt
0000dc  4628              MOV      r0,r5
0000de  f7fffffe          BL       __aeabi_fadd
0000e2  495e              LDR      r1,|L1.604|
0000e4  6008              STR      r0,[r1,#0]  ; exInt
;;;94       eyInt = eyInt + ErrY * KiDef;
0000e6  495c              LDR      r1,|L1.600|
0000e8  4648              MOV      r0,r9
0000ea  f7fffffe          BL       __aeabi_fmul
0000ee  4605              MOV      r5,r0
0000f0  485b              LDR      r0,|L1.608|
0000f2  6801              LDR      r1,[r0,#0]  ; eyInt
0000f4  4628              MOV      r0,r5
0000f6  f7fffffe          BL       __aeabi_fadd
0000fa  4959              LDR      r1,|L1.608|
0000fc  6008              STR      r0,[r1,#0]  ; eyInt
;;;95       ezInt = ezInt + ErrZ * KiDef;
0000fe  4956              LDR      r1,|L1.600|
000100  4650              MOV      r0,r10
000102  f7fffffe          BL       __aeabi_fmul
000106  4605              MOV      r5,r0
000108  4856              LDR      r0,|L1.612|
00010a  6801              LDR      r1,[r0,#0]  ; ezInt
00010c  4628              MOV      r0,r5
00010e  f7fffffe          BL       __aeabi_fadd
000112  4954              LDR      r1,|L1.612|
000114  6008              STR      r0,[r1,#0]  ; ezInt
;;;96     
;;;97       GyrX = sensor.gyro.radian.x * Gyro_Gr + KpDef * VariableParameter(ErrX) * ErrX  +  exInt;
000116  4851              LDR      r0,|L1.604|
000118  6800              LDR      r0,[r0,#0]  ; exInt
00011a  f7fffffe          BL       __aeabi_f2d
00011e  e9cd0104          STRD     r0,r1,[sp,#0x10]
000122  4620              MOV      r0,r4
000124  f7fffffe          BL       VariableParameter
000128  4683              MOV      r11,r0
00012a  494f              LDR      r1,|L1.616|
00012c  f7fffffe          BL       __aeabi_fmul
000130  4680              MOV      r8,r0
000132  4621              MOV      r1,r4
000134  f7fffffe          BL       __aeabi_fmul
000138  4607              MOV      r7,r0
00013a  f7fffffe          BL       __aeabi_f2d
00013e  4605              MOV      r5,r0
000140  460e              MOV      r6,r1
000142  4943              LDR      r1,|L1.592|
000144  6dc8              LDR      r0,[r1,#0x5c]
000146  f7fffffe          BL       __aeabi_f2d
00014a  4607              MOV      r7,r0
00014c  4a47              LDR      r2,|L1.620|
00014e  4b48              LDR      r3,|L1.624|
000150  f7fffffe          BL       __aeabi_dmul
000154  462a              MOV      r2,r5
000156  4633              MOV      r3,r6
000158  e9cd0100          STRD     r0,r1,[sp,#0]
00015c  f7fffffe          BL       __aeabi_dadd
000160  e9cd0102          STRD     r0,r1,[sp,#8]
000164  e9dd2304          LDRD     r2,r3,[sp,#0x10]
000168  f7fffffe          BL       __aeabi_dadd
00016c  e9cd0106          STRD     r0,r1,[sp,#0x18]
000170  f7fffffe          BL       __aeabi_d2f
000174  900e              STR      r0,[sp,#0x38]
;;;98       GyrY = sensor.gyro.radian.y * Gyro_Gr + KpDef * VariableParameter(ErrY) * ErrY  +  eyInt;
000176  483a              LDR      r0,|L1.608|
000178  6800              LDR      r0,[r0,#0]  ; eyInt
00017a  f7fffffe          BL       __aeabi_f2d
00017e  e9cd0104          STRD     r0,r1,[sp,#0x10]
000182  4648              MOV      r0,r9
000184  f7fffffe          BL       VariableParameter
000188  4683              MOV      r11,r0
00018a  4937              LDR      r1,|L1.616|
00018c  f7fffffe          BL       __aeabi_fmul
000190  4606              MOV      r6,r0
000192  4649              MOV      r1,r9
000194  f7fffffe          BL       __aeabi_fmul
000198  4605              MOV      r5,r0
00019a  f7fffffe          BL       __aeabi_f2d
00019e  4607              MOV      r7,r0
0001a0  4688              MOV      r8,r1
0001a2  492b              LDR      r1,|L1.592|
0001a4  6e08              LDR      r0,[r1,#0x60]
0001a6  f7fffffe          BL       __aeabi_f2d
0001aa  4605              MOV      r5,r0
0001ac  4a2f              LDR      r2,|L1.620|
0001ae  4b30              LDR      r3,|L1.624|
0001b0  f7fffffe          BL       __aeabi_dmul
0001b4  463a              MOV      r2,r7
0001b6  4643              MOV      r3,r8
0001b8  e9cd0100          STRD     r0,r1,[sp,#0]
0001bc  f7fffffe          BL       __aeabi_dadd
0001c0  e9cd0102          STRD     r0,r1,[sp,#8]
0001c4  e9dd2304          LDRD     r2,r3,[sp,#0x10]
0001c8  f7fffffe          BL       __aeabi_dadd
0001cc  e9cd0106          STRD     r0,r1,[sp,#0x18]
0001d0  f7fffffe          BL       __aeabi_d2f
0001d4  900d              STR      r0,[sp,#0x34]
;;;99     	GyrZ = sensor.gyro.radian.z * Gyro_Gr + KpDef * VariableParameter(ErrZ) * ErrZ  +  ezInt;
0001d6  4823              LDR      r0,|L1.612|
0001d8  6800              LDR      r0,[r0,#0]  ; ezInt
0001da  f7fffffe          BL       __aeabi_f2d
0001de  e9cd0104          STRD     r0,r1,[sp,#0x10]
0001e2  4650              MOV      r0,r10
0001e4  f7fffffe          BL       VariableParameter
0001e8  491f              LDR      r1,|L1.616|
0001ea  9000              STR      r0,[sp,#0]
0001ec  f7fffffe          BL       __aeabi_fmul
0001f0  4651              MOV      r1,r10
0001f2  9001              STR      r0,[sp,#4]
0001f4  f7fffffe          BL       __aeabi_fmul
0001f8  4683              MOV      r11,r0
0001fa  f7fffffe          BL       __aeabi_f2d
0001fe  e9cd0102          STRD     r0,r1,[sp,#8]
000202  4913              LDR      r1,|L1.592|
000204  6e48              LDR      r0,[r1,#0x64]
000206  f7fffffe          BL       __aeabi_f2d
00020a  4a18              LDR      r2,|L1.620|
00020c  4b18              LDR      r3,|L1.624|
00020e  e9cd0100          STRD     r0,r1,[sp,#0]
000212  f7fffffe          BL       __aeabi_dmul
000216  4607              MOV      r7,r0
000218  e9dd2302          LDRD     r2,r3,[sp,#8]
00021c  f7fffffe          BL       __aeabi_dadd
000220  4605              MOV      r5,r0
000222  e9dd2304          LDRD     r2,r3,[sp,#0x10]
000226  f7fffffe          BL       __aeabi_dadd
00022a  e9cd0106          STRD     r0,r1,[sp,#0x18]
00022e  f7fffffe          BL       __aeabi_d2f
000232  900c              STR      r0,[sp,#0x30]
;;;100    	
;;;101    	
;;;102    	// 一阶龙格库塔法, 更新四元数
;;;103    	Quaternion_RungeKutta(&NumQ, GyrX, GyrY, GyrZ, SampleRateHalf);
000234  480f              LDR      r0,|L1.628|
000236  9000              STR      r0,[sp,#0]
000238  4806              LDR      r0,|L1.596|
00023a  e9dd320c          LDRD     r3,r2,[sp,#0x30]
00023e  990e              LDR      r1,[sp,#0x38]
000240  f7fffffe          BL       Quaternion_RungeKutta
;;;104    	
;;;105    	// 四元数归一化
;;;106    	Quaternion_Normalize(&NumQ);
000244  4803              LDR      r0,|L1.596|
000246  f7fffffe          BL       Quaternion_Normalize
;;;107    }
00024a  b013              ADD      sp,sp,#0x4c
00024c  e8bd8ff0          POP      {r4-r11,pc}
;;;108    
                          ENDP

                  |L1.592|
                          DCD      sensor
                  |L1.596|
                          DCD      NumQ
                  |L1.600|
                          DCD      0x3a03126f
                  |L1.604|
                          DCD      exInt
                  |L1.608|
                          DCD      eyInt
                  |L1.612|
                          DCD      ezInt
                  |L1.616|
                          DCD      0x3f333333
                  |L1.620|
                          DCD      0xa09d99d9
                  |L1.624|
                          DCD      0x3f41c7a8
                  |L1.628|
                          DCD      0x3a83126f

                          AREA ||i.AHRS_Geteuler||, CODE, READONLY, ALIGN=2

                  AHRS_Geteuler PROC
;;;117    /*====================================================================================================*/
;;;118    void AHRS_Geteuler(void)
000000  e92d4ff0          PUSH     {r4-r11,lr}
;;;119    {
000004  b08d              SUB      sp,sp,#0x34
;;;120    	fp32 sin_pitch,sin_roll,cos_roll,cos_pitch;
;;;121    	
;;;122    	AHRS_getValues();
000006  f7fffffe          BL       AHRS_getValues
;;;123    	
;;;124    	// 获取四元数
;;;125      AHRS_GetQ(&NumQ);
00000a  4891              LDR      r0,|L2.592|
00000c  f7fffffe          BL       AHRS_GetQ
;;;126    	
;;;127      // 四元数转欧拉角
;;;128    	Quaternion_ToAngE(&NumQ, &AngE);
000010  4990              LDR      r1,|L2.596|
000012  488f              LDR      r0,|L2.592|
000014  f7fffffe          BL       Quaternion_ToAngE
;;;129    	
;;;130      // 计算欧拉角的三角函数值
;;;131      sin_roll  = sin(AngE.Roll);
000018  498e              LDR      r1,|L2.596|
00001a  6848              LDR      r0,[r1,#4]  ; AngE
00001c  f7fffffe          BL       __aeabi_f2d
000020  4606              MOV      r6,r0
000022  f7fffffe          BL       ||sin||
000026  4604              MOV      r4,r0
000028  f7fffffe          BL       __aeabi_d2f
00002c  900b              STR      r0,[sp,#0x2c]
;;;132      sin_pitch = sin(AngE.Pitch);
00002e  4989              LDR      r1,|L2.596|
000030  6808              LDR      r0,[r1,#0]  ; AngE
000032  f7fffffe          BL       __aeabi_f2d
000036  4606              MOV      r6,r0
000038  f7fffffe          BL       ||sin||
00003c  4604              MOV      r4,r0
00003e  f7fffffe          BL       __aeabi_d2f
000042  900c              STR      r0,[sp,#0x30]
;;;133      cos_roll  = cos(AngE.Roll);
000044  4983              LDR      r1,|L2.596|
000046  6848              LDR      r0,[r1,#4]  ; AngE
000048  f7fffffe          BL       __aeabi_f2d
00004c  4606              MOV      r6,r0
00004e  f7fffffe          BL       ||cos||
000052  4604              MOV      r4,r0
000054  f7fffffe          BL       __aeabi_d2f
000058  900a              STR      r0,[sp,#0x28]
;;;134      cos_pitch = cos(AngE.Pitch);
00005a  497e              LDR      r1,|L2.596|
00005c  6808              LDR      r0,[r1,#0]  ; AngE
00005e  f7fffffe          BL       __aeabi_f2d
000062  4606              MOV      r6,r0
000064  f7fffffe          BL       ||cos||
000068  4604              MOV      r4,r0
00006a  f7fffffe          BL       __aeabi_d2f
00006e  9009              STR      r0,[sp,#0x24]
;;;135    	
;;;136    	//  地磁不存在或地磁数据不正常则停用地磁数据
;;;137    	if(!flag.MagIssue || flag.MagExist){
000070  4879              LDR      r0,|L2.600|
000072  78c0              LDRB     r0,[r0,#3]  ; flag
000074  b118              CBZ      r0,|L2.126|
000076  4878              LDR      r0,|L2.600|
000078  7840              LDRB     r0,[r0,#1]  ; flag
00007a  2800              CMP      r0,#0
00007c  d07e              BEQ      |L2.380|
                  |L2.126|
;;;138    		// 地磁倾角补偿
;;;139    		fp32 hx = MAG[0]*cos_pitch + MAG[1]*sin_pitch*sin_roll - MAG[2]*cos_roll*sin_pitch; 
00007e  4977              LDR      r1,|L2.604|
000080  f9b10004          LDRSH    r0,[r1,#4]  ; MAG
000084  f7fffffe          BL       __aeabi_i2f
000088  4607              MOV      r7,r0
00008a  990a              LDR      r1,[sp,#0x28]
00008c  f7fffffe          BL       __aeabi_fmul
000090  4606              MOV      r6,r0
000092  990c              LDR      r1,[sp,#0x30]
000094  f7fffffe          BL       __aeabi_fmul
000098  4604              MOV      r4,r0
00009a  4970              LDR      r1,|L2.604|
00009c  f9b10002          LDRSH    r0,[r1,#2]  ; MAG
0000a0  f7fffffe          BL       __aeabi_i2f
0000a4  4681              MOV      r9,r0
0000a6  990c              LDR      r1,[sp,#0x30]
0000a8  f7fffffe          BL       __aeabi_fmul
0000ac  4680              MOV      r8,r0
0000ae  990b              LDR      r1,[sp,#0x2c]
0000b0  f7fffffe          BL       __aeabi_fmul
0000b4  4606              MOV      r6,r0
0000b6  4969              LDR      r1,|L2.604|
0000b8  f9b10000          LDRSH    r0,[r1,#0]  ; MAG
0000bc  f7fffffe          BL       __aeabi_i2f
0000c0  4680              MOV      r8,r0
0000c2  9909              LDR      r1,[sp,#0x24]
0000c4  f7fffffe          BL       __aeabi_fmul
0000c8  4607              MOV      r7,r0
0000ca  4631              MOV      r1,r6
0000cc  f7fffffe          BL       __aeabi_fadd
0000d0  4605              MOV      r5,r0
0000d2  4621              MOV      r1,r4
0000d4  f7fffffe          BL       __aeabi_fsub
0000d8  9008              STR      r0,[sp,#0x20]
;;;140    		fp32 hy = MAG[1]*cos_roll + MAG[2]*sin_roll;
0000da  4960              LDR      r1,|L2.604|
0000dc  f9b10004          LDRSH    r0,[r1,#4]  ; MAG
0000e0  f7fffffe          BL       __aeabi_i2f
0000e4  4606              MOV      r6,r0
0000e6  990b              LDR      r1,[sp,#0x2c]
0000e8  f7fffffe          BL       __aeabi_fmul
0000ec  4604              MOV      r4,r0
0000ee  495b              LDR      r1,|L2.604|
0000f0  f9b10002          LDRSH    r0,[r1,#2]  ; MAG
0000f4  f7fffffe          BL       __aeabi_i2f
0000f8  4606              MOV      r6,r0
0000fa  990a              LDR      r1,[sp,#0x28]
0000fc  f7fffffe          BL       __aeabi_fmul
000100  4605              MOV      r5,r0
000102  4621              MOV      r1,r4
000104  f7fffffe          BL       __aeabi_fadd
000108  9007              STR      r0,[sp,#0x1c]
;;;141    		
;;;142    		// 利用地磁解算航向角
;;;143    		fp32 mag_yaw = -Degree(atan2((fp64)hy,(fp64)hx));
00010a  9808              LDR      r0,[sp,#0x20]
00010c  f7fffffe          BL       __aeabi_f2d
000110  4682              MOV      r10,r0
000112  468b              MOV      r11,r1
000114  9807              LDR      r0,[sp,#0x1c]
000116  f7fffffe          BL       __aeabi_f2d
00011a  4680              MOV      r8,r0
00011c  4652              MOV      r2,r10
00011e  465b              MOV      r3,r11
000120  f7fffffe          BL       atan2
000124  4606              MOV      r6,r0
000126  f7fffffe          BL       Degree
00012a  f0814100          EOR      r1,r1,#0x80000000
00012e  4604              MOV      r4,r0
000130  f7fffffe          BL       __aeabi_d2f
000134  9006              STR      r0,[sp,#0x18]
;;;144    		 
;;;145    		// 陀螺仪积分解算航向角
;;;146    		AngE.Yaw += Degree(sensor.gyro.radian.z * Gyro_Gr * 2 * SampleRateHalf);
000136  494a              LDR      r1,|L2.608|
000138  6e48              LDR      r0,[r1,#0x64]
00013a  f7fffffe          BL       __aeabi_f2d
00013e  4606              MOV      r6,r0
000140  4a48              LDR      r2,|L2.612|
000142  4b49              LDR      r3,|L2.616|
000144  f7fffffe          BL       __aeabi_dmul
000148  4680              MOV      r8,r0
00014a  2200              MOVS     r2,#0
00014c  f04f4380          MOV      r3,#0x40000000
000150  f7fffffe          BL       __aeabi_dmul
000154  f04f4260          MOV      r2,#0xe0000000
000158  4b44              LDR      r3,|L2.620|
00015a  e9cd0100          STRD     r0,r1,[sp,#0]
00015e  f7fffffe          BL       __aeabi_dmul
000162  4682              MOV      r10,r0
000164  f7fffffe          BL       Degree
000168  e9cd0102          STRD     r0,r1,[sp,#8]
00016c  4939              LDR      r1,|L2.596|
00016e  6888              LDR      r0,[r1,#8]  ; AngE
000170  f7fffffe          BL       __aeabi_f2d
000174  4604              MOV      r4,r0
000176  e9dd2302          LDRD     r2,r3,[sp,#8]
00017a  e000              B        |L2.382|
                  |L2.380|
00017c  e042              B        |L2.516|
                  |L2.382|
00017e  f7fffffe          BL       __aeabi_dadd
000182  e9cd0104          STRD     r0,r1,[sp,#0x10]
000186  f7fffffe          BL       __aeabi_d2f
00018a  4932              LDR      r1,|L2.596|
00018c  6088              STR      r0,[r1,#8]  ; AngE
;;;147    		
;;;148    		// 地磁解算的航向角与陀螺仪积分解算的航向角进行互补融合 
;;;149    		if((mag_yaw>90 && AngE.Yaw<-90) || (mag_yaw<-90 && AngE.Yaw>90)) 
00018e  4938              LDR      r1,|L2.624|
000190  9806              LDR      r0,[sp,#0x18]
000192  f7fffffe          BL       __aeabi_cfrcmple
000196  d205              BCS      |L2.420|
000198  492e              LDR      r1,|L2.596|
00019a  6888              LDR      r0,[r1,#8]  ; AngE
00019c  4935              LDR      r1,|L2.628|
00019e  f7fffffe          BL       __aeabi_cfcmple
0001a2  d30a              BCC      |L2.442|
                  |L2.420|
0001a4  4933              LDR      r1,|L2.628|
0001a6  9806              LDR      r0,[sp,#0x18]
0001a8  f7fffffe          BL       __aeabi_cfcmple
0001ac  d219              BCS      |L2.482|
0001ae  4929              LDR      r1,|L2.596|
0001b0  6888              LDR      r0,[r1,#8]  ; AngE
0001b2  492f              LDR      r1,|L2.624|
0001b4  f7fffffe          BL       __aeabi_cfrcmple
0001b8  d213              BCS      |L2.482|
                  |L2.442|
;;;150    				AngE.Yaw = -AngE.Yaw * 0.998f + mag_yaw * 0.002f;
0001ba  492f              LDR      r1,|L2.632|
0001bc  9806              LDR      r0,[sp,#0x18]
0001be  f7fffffe          BL       __aeabi_fmul
0001c2  4606              MOV      r6,r0
0001c4  4823              LDR      r0,|L2.596|
0001c6  6880              LDR      r0,[r0,#8]  ; AngE
0001c8  f0804500          EOR      r5,r0,#0x80000000
0001cc  492b              LDR      r1,|L2.636|
0001ce  4628              MOV      r0,r5
0001d0  f7fffffe          BL       __aeabi_fmul
0001d4  4604              MOV      r4,r0
0001d6  4631              MOV      r1,r6
0001d8  f7fffffe          BL       __aeabi_fadd
0001dc  491d              LDR      r1,|L2.596|
0001de  6088              STR      r0,[r1,#8]  ; AngE
0001e0  e00f              B        |L2.514|
                  |L2.482|
;;;151    		else AngE.Yaw = AngE.Yaw * 0.998f + mag_yaw * 0.002f;
0001e2  4925              LDR      r1,|L2.632|
0001e4  9806              LDR      r0,[sp,#0x18]
0001e6  f7fffffe          BL       __aeabi_fmul
0001ea  4604              MOV      r4,r0
0001ec  4919              LDR      r1,|L2.596|
0001ee  6888              LDR      r0,[r1,#8]  ; AngE
0001f0  4922              LDR      r1,|L2.636|
0001f2  f7fffffe          BL       __aeabi_fmul
0001f6  4605              MOV      r5,r0
0001f8  4621              MOV      r1,r4
0001fa  f7fffffe          BL       __aeabi_fadd
0001fe  4915              LDR      r1,|L2.596|
000200  6088              STR      r0,[r1,#8]  ; AngE
                  |L2.514|
;;;152    	}
000202  e00b              B        |L2.540|
                  |L2.516|
;;;153    	else 
;;;154    		AngE.Yaw = Degree(AngE.Yaw);
000204  4913              LDR      r1,|L2.596|
000206  6888              LDR      r0,[r1,#8]  ; AngE
000208  f7fffffe          BL       __aeabi_f2d
00020c  4606              MOV      r6,r0
00020e  f7fffffe          BL       Degree
000212  4604              MOV      r4,r0
000214  f7fffffe          BL       __aeabi_d2f
000218  490e              LDR      r1,|L2.596|
00021a  6088              STR      r0,[r1,#8]  ; AngE
                  |L2.540|
;;;155    	
;;;156      AngE.Roll = Degree(AngE.Roll);  // roll
00021c  490d              LDR      r1,|L2.596|
00021e  6848              LDR      r0,[r1,#4]  ; AngE
000220  f7fffffe          BL       __aeabi_f2d
000224  4606              MOV      r6,r0
000226  f7fffffe          BL       Degree
00022a  4604              MOV      r4,r0
00022c  f7fffffe          BL       __aeabi_d2f
000230  4908              LDR      r1,|L2.596|
000232  6048              STR      r0,[r1,#4]  ; AngE
;;;157    	AngE.Pitch = Degree(AngE.Pitch); // pitch
000234  6808              LDR      r0,[r1,#0]  ; AngE
000236  f7fffffe          BL       __aeabi_f2d
00023a  4606              MOV      r6,r0
00023c  f7fffffe          BL       Degree
000240  4604              MOV      r4,r0
000242  f7fffffe          BL       __aeabi_d2f
000246  4903              LDR      r1,|L2.596|
000248  6008              STR      r0,[r1,#0]  ; AngE
;;;158    }
00024a  b00d              ADD      sp,sp,#0x34
00024c  e8bd8ff0          POP      {r4-r11,pc}
                          ENDP

                  |L2.592|
                          DCD      NumQ
                  |L2.596|
                          DCD      AngE
                  |L2.600|
                          DCD      flag
                  |L2.604|
                          DCD      MAG
                  |L2.608|
                          DCD      sensor
                  |L2.612|
                          DCD      0xa09d99d9
                  |L2.616|
                          DCD      0x3f41c7a8
                  |L2.620|
                          DCD      0x3f50624d
                  |L2.624|
                          DCD      0x42b40000
                  |L2.628|
                          DCD      0xc2b40000
                  |L2.632|
                          DCD      0x3b03126f
                  |L2.636|
                          DCD      0x3f7f7cee

                          AREA ||i.AHRS_getValues||, CODE, READONLY, ALIGN=2

                  AHRS_getValues PROC
;;;37     
;;;38     void AHRS_getValues(void)
000000  e92d41ff          PUSH     {r0-r8,lr}
;;;39     {
;;;40     	static float x,y,z;
;;;41     	
;;;42     	MPU6050_Dataanl();
000004  f7fffffe          BL       MPU6050_Dataanl
;;;43     	
;;;44     	HMC5883lRead(MAG);
000008  483c              LDR      r0,|L3.252|
00000a  f7fffffe          BL       HMC5883lRead
;;;45     	
;;;46     	// 加速度计IIR滤波
;;;47     	sensor.acc.averag.x = IIR_I_Filter(sensor.acc.origin.x, InPut_IIR[0], OutPut_IIR[0], b_IIR, IIR_ORDER+1, a_IIR, IIR_ORDER+1);
00000e  493c              LDR      r1,|L3.256|
000010  f9b10000          LDRSH    r0,[r1,#0]  ; sensor
000014  f7fffffe          BL       __aeabi_i2d
000018  4606              MOV      r6,r0
00001a  460f              MOV      r7,r1
00001c  2005              MOVS     r0,#5
00001e  4939              LDR      r1,|L3.260|
000020  4b39              LDR      r3,|L3.264|
000022  e9cd3000          STRD     r3,r0,[sp,#0]
000026  4b39              LDR      r3,|L3.268|
000028  4a39              LDR      r2,|L3.272|
00002a  e9cd1002          STRD     r1,r0,[sp,#8]
00002e  4630              MOV      r0,r6
000030  4639              MOV      r1,r7
000032  f7fffffe          BL       IIR_I_Filter
000036  4604              MOV      r4,r0
000038  f7fffffe          BL       __aeabi_d2f
00003c  4930              LDR      r1,|L3.256|
00003e  6088              STR      r0,[r1,#8]  ; sensor
;;;48     	sensor.acc.averag.y = IIR_I_Filter(sensor.acc.origin.y, InPut_IIR[1], OutPut_IIR[1], b_IIR, IIR_ORDER+1, a_IIR, IIR_ORDER+1);
000040  f9b10002          LDRSH    r0,[r1,#2]  ; sensor
000044  f7fffffe          BL       __aeabi_i2d
000048  4606              MOV      r6,r0
00004a  460f              MOV      r7,r1
00004c  2005              MOVS     r0,#5
00004e  492d              LDR      r1,|L3.260|
000050  4b2d              LDR      r3,|L3.264|
000052  e9cd3000          STRD     r3,r0,[sp,#0]
000056  4b2d              LDR      r3,|L3.268|
000058  3328              ADDS     r3,r3,#0x28
00005a  4a2d              LDR      r2,|L3.272|
00005c  3228              ADDS     r2,r2,#0x28
00005e  e9cd1002          STRD     r1,r0,[sp,#8]
000062  4630              MOV      r0,r6
000064  4639              MOV      r1,r7
000066  f7fffffe          BL       IIR_I_Filter
00006a  4604              MOV      r4,r0
00006c  f7fffffe          BL       __aeabi_d2f
000070  4923              LDR      r1,|L3.256|
000072  60c8              STR      r0,[r1,#0xc]
;;;49     	sensor.acc.averag.z = IIR_I_Filter(sensor.acc.origin.z, InPut_IIR[2], OutPut_IIR[2], b_IIR, IIR_ORDER+1, a_IIR, IIR_ORDER+1);
000074  f9b10004          LDRSH    r0,[r1,#4]  ; sensor
000078  f7fffffe          BL       __aeabi_i2d
00007c  4606              MOV      r6,r0
00007e  460f              MOV      r7,r1
000080  2005              MOVS     r0,#5
000082  4920              LDR      r1,|L3.260|
000084  4b20              LDR      r3,|L3.264|
000086  e9cd3000          STRD     r3,r0,[sp,#0]
00008a  4b20              LDR      r3,|L3.268|
00008c  3350              ADDS     r3,r3,#0x50
00008e  4a20              LDR      r2,|L3.272|
000090  3250              ADDS     r2,r2,#0x50
000092  e9cd1002          STRD     r1,r0,[sp,#8]
000096  4630              MOV      r0,r6
000098  4639              MOV      r1,r7
00009a  f7fffffe          BL       IIR_I_Filter
00009e  4604              MOV      r4,r0
0000a0  f7fffffe          BL       __aeabi_d2f
0000a4  4916              LDR      r1,|L3.256|
0000a6  6108              STR      r0,[r1,#0x10]
;;;50     	
;;;51     	// 陀螺仪一阶低通滤波
;;;52      	sensor.gyro.averag.x = LPF_1st(x,sensor.gyro.radian.x,0.386f);
0000a8  4608              MOV      r0,r1
0000aa  4a1a              LDR      r2,|L3.276|
0000ac  6dc1              LDR      r1,[r0,#0x5c]
0000ae  481a              LDR      r0,|L3.280|
0000b0  6800              LDR      r0,[r0,#0]  ; x
0000b2  f7fffffe          BL       LPF_1st
0000b6  4912              LDR      r1,|L3.256|
0000b8  63c8              STR      r0,[r1,#0x3c]
;;;53      	sensor.gyro.averag.y = LPF_1st(y,sensor.gyro.radian.y,0.386f);
0000ba  4608              MOV      r0,r1
0000bc  4a15              LDR      r2,|L3.276|
0000be  6e01              LDR      r1,[r0,#0x60]
0000c0  4816              LDR      r0,|L3.284|
0000c2  6800              LDR      r0,[r0,#0]  ; y
0000c4  f7fffffe          BL       LPF_1st
0000c8  4601              MOV      r1,r0
0000ca  480d              LDR      r0,|L3.256|
0000cc  6401              STR      r1,[r0,#0x40]
;;;54      	sensor.gyro.averag.z = LPF_1st(z,sensor.gyro.radian.z,0.386f);
0000ce  4a11              LDR      r2,|L3.276|
0000d0  6e41              LDR      r1,[r0,#0x64]
0000d2  4813              LDR      r0,|L3.288|
0000d4  6800              LDR      r0,[r0,#0]  ; z
0000d6  f7fffffe          BL       LPF_1st
0000da  4601              MOV      r1,r0
0000dc  4808              LDR      r0,|L3.256|
0000de  6441              STR      r1,[r0,#0x44]
;;;55     	
;;;56     	x = sensor.gyro.averag.x;
0000e0  6bc0              LDR      r0,[r0,#0x3c]
0000e2  490d              LDR      r1,|L3.280|
0000e4  6008              STR      r0,[r1,#0]  ; x
;;;57     	y = sensor.gyro.averag.y;
0000e6  4806              LDR      r0,|L3.256|
0000e8  6c00              LDR      r0,[r0,#0x40]
0000ea  490c              LDR      r1,|L3.284|
0000ec  6008              STR      r0,[r1,#0]  ; y
;;;58     	z = sensor.gyro.averag.z;
0000ee  4804              LDR      r0,|L3.256|
0000f0  6c40              LDR      r0,[r0,#0x44]
0000f2  490b              LDR      r1,|L3.288|
0000f4  6008              STR      r0,[r1,#0]  ; z
;;;59     }
0000f6  e8bd81ff          POP      {r0-r8,pc}
;;;60     
                          ENDP

0000fa  0000              DCW      0x0000
                  |L3.252|
                          DCD      MAG
                  |L3.256|
                          DCD      sensor
                  |L3.260|
                          DCD      a_IIR
                  |L3.264|
                          DCD      b_IIR
                  |L3.268|
                          DCD      OutPut_IIR
                  |L3.272|
                          DCD      InPut_IIR
                  |L3.276|
                          DCD      0x3ec5a1cb
                  |L3.280|
                          DCD      x
                  |L3.284|
                          DCD      y
                  |L3.288|
                          DCD      z

                          AREA ||.bss||, DATA, NOINIT, ALIGN=3

                  InPut_IIR
                          %        120
                  OutPut_IIR
                          %        120
                  AngE
                          %        12
                  angle
                          %        12

                          AREA ||.data||, DATA, ALIGN=3

                  b_IIR
000000  e0000000          DCFD     0x3f4a36e2e0000000 ; 0.00079999997979030013
000004  3f4a36e2
000008  e0000000          DCFD     0x3f6a36e2e0000000 ; 0.0031999999191612005
00000c  3f6a36e2
000010  40000000          DCFD     0x3f73a92a40000000 ; 0.0048000002279877663
000014  3f73a92a
000018  e0000000          DCFD     0x3f6a36e2e0000000 ; 0.0031999999191612005
00001c  3f6a36e2
000020  e0000000          DCFD     0x3f4a36e2e0000000 ; 0.00079999997979030013
000024  3f4a36e2
                  a_IIR
000028  00000000          DCFD     0x3ff0000000000000 ; 1
00002c  3ff00000
000030  80000000          DCFD     0xc008240b80000000 ; -3.0176000595092773
000034  c008240b
000038  e0000000          DCFD     0x400c0ebee0000000 ; 3.5072000026702881
00003c  400c0ebe
000040  00000000          DCFD     0xbffd8fc500000000 ; -1.847599983215332
000044  bffd8fc5
000048  e0000000          DCFD     0x3fd7bb2fe0000000 ; 0.37079998850822449
00004c  3fd7bb2f
                  NumQ
000050  3f800000          DCFS     0x3f800000 ; 1
000054  00000000          DCFS     0x00000000 ; 0
000058  00000000          DCFS     0x00000000 ; 0
00005c  00000000          DCFS     0x00000000 ; 0
                  MAG
                          DCD      0x00000000
000064  00000000          DCB      0x00,0x00,0x00,0x00
                  x
                          DCD      0x00000000
                  y
                          DCD      0x00000000
                  z
                          DCD      0x00000000
                  exInt
000074  00000000          DCFS     0x00000000 ; 0
                  eyInt
000078  00000000          DCFS     0x00000000 ; 0
                  ezInt
00007c  00000000          DCFS     0x00000000 ; 0
