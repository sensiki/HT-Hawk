; generated by Component: ARM Compiler 5.05 update 1 (build 106) Tool: ArmCC [4d0efa]
; commandline ArmCC [--c99 --list --split_sections --debug -c --asm --interleave -o.\flash\obj\multirotor_app.o --asm_dir=.\Flash\List\ --list_dir=.\Flash\List\ --depend=.\flash\obj\multirotor_app.d --cpu=Cortex-M3 --apcs=interwork -O0 --diag_suppress=9931 -I..\..\Libraries\CMSIS\CM3\CoreSupport -I..\..\Libraries\CMSIS\CM3\DeviceSupport\ST\STM32F10x -I..\..\Libraries\STM32F10x_StdPeriph_Driver\inc -I..\..\Libraries\STM32_USB-FS-Device_Driver\inc -I..\..\User\usb_virture_com -I..\..\User -I..\..\User\bsp -I..\..\User\Driver\IIC -I..\..\User\Driver\LED -I..\..\User\Driver\TIM -I..\..\User\Driver\SPI -I..\..\User\Driver\ADC -I..\..\User\Driver\Delay -I..\..\User\Driver\UART -I..\..\User\Driver\MOTOR -I..\..\User\Driver\PWM_IN -I..\..\User\Driver\EEPROM -I..\..\User\Modules\Modules_mpu6050 -I..\..\User\Modules\Modules_nrf24L01 -I..\..\User\Modules\Modules_hmc5883 -I..\..\User\Algorithm\Algorithm_filter -I..\..\User\Algorithm\Algorithm_math -I..\..\User\Algorithm\Algorithm_sqLite -I..\..\User\Algorithm\Algorithm_quaternion -I..\..\User\Function\MultiRotor_rc -I..\..\User\Function\MultiRotor_app -I..\..\User\Function\MultiRotor_ahrs -I..\..\User\Function\MultiRotor_radio -I..\..\User\Function\MultiRotor_control -I..\..\User\Modules\Modules_oled -I..\..\User\Driver\STMFLASH -I..\..\User\Modules\Modules_ms5611 -IE:\GitHub\HT-Hawk\Project\MDK-ARM(uV4)\RTE -Id:\Keil_v5\ARM\PACK\Keil\STM32F1xx_DFP\1.1.0\Device\Include -Id:\Keil_v5\ARM\CMSIS\Include -D__MICROLIB -D__UVISION_VERSION=514 -DSTM32F10X_HD -DSTM32F10X_HD -DUSE_STDPERIPH_DRIVER --omf_browse=.\flash\obj\multirotor_app.crf ..\..\User\Function\MultiRotor_app\MultiRotor_app.c]
                          THUMB

                          AREA ||i.Bootloader_Set||, CODE, READONLY, ALIGN=2

                  Bootloader_Set PROC
;;;24     /*====================================================================================================*/
;;;25     void Bootloader_Set(void)
000000  b508              PUSH     {r3,lr}
;;;26     {
;;;27      	u16 i;
;;;28     	
;;;29     	// 设置偏移量 
;;;30     	SCB->VTOR = FLASH_BASE | FLASH_EXCURSION ; 
000002  4806              LDR      r0,|L1.28|
000004  4906              LDR      r1,|L1.32|
000006  6008              STR      r0,[r1,#0]
;;;31     	
;;;32     	i=0x0505;
000008  f2405005          MOV      r0,#0x505
00000c  9000              STR      r0,[sp,#0]
;;;33     	STMFLASH_Write(pro_FALG_ADD,&i,1);   
00000e  2201              MOVS     r2,#1
000010  4669              MOV      r1,sp
000012  4802              LDR      r0,|L1.28|
000014  3810              SUBS     r0,r0,#0x10
000016  f7fffffe          BL       STMFLASH_Write
;;;34     }
00001a  bd08              POP      {r3,pc}
;;;35     /*====================================================================================================*/
                          ENDP

                  |L1.28|
                          DCD      0x08020000
                  |L1.32|
                          DCD      0xe000ed08

                          AREA ||i.InitBoard||, CODE, READONLY, ALIGN=1

                  InitBoard PROC
;;;43     /*====================================================================================================*/
;;;44     void InitBoard(void)
000000  b510              PUSH     {r4,lr}
;;;45     {
;;;46     	delay_init(72);
000002  2048              MOVS     r0,#0x48
000004  f7fffffe          BL       delay_init
;;;47     	Nvic_Init();
000008  f7fffffe          BL       Nvic_Init
;;;48     	
;;;49     	/* 初始化USB设备 */
;;;50       bsp_InitUsb();
00000c  f7fffffe          BL       bsp_InitUsb
;;;51     	 
;;;52     	ADC1_Init();	
000010  f7fffffe          BL       ADC1_Init
;;;53     	OLED_Init();
000014  f7fffffe          BL       OLED_Init
;;;54     	I2C_INIT();
000018  f7fffffe          BL       I2C_INIT
;;;55       LED_GPIO_Config();
00001c  f7fffffe          BL       LED_GPIO_Config
;;;56     	USART1_Config();
000020  f7fffffe          BL       USART1_Config
;;;57     	TIM5_Config();
000024  f7fffffe          BL       TIM5_Config
;;;58     	PWM_OUT_Config();
000028  f7fffffe          BL       PWM_OUT_Config
;;;59     	PWM_IN_Config();
00002c  f7fffffe          BL       PWM_IN_Config
;;;60     	NRF24L01_Init();
000030  f7fffffe          BL       NRF24L01_Init
;;;61      	LED_SHOW();
000034  f7fffffe          BL       LED_SHOW
;;;62      	FLASH_Unlock();
000038  f7fffffe          BL       FLASH_Unlock
;;;63      	EE_Init();
00003c  f7fffffe          BL       EE_Init
;;;64     }
000040  bd10              POP      {r4,pc}
;;;65     /*====================================================================================================*/
                          ENDP


                          AREA ||i.Screen_Update||, CODE, READONLY, ALIGN=2

                  Screen_Update PROC
;;;99     /*====================================================================================================*/
;;;100    void Screen_Update(void)
000000  b538              PUSH     {r3-r5,lr}
;;;101    {
;;;102    	Dis_Float(1,40,AngE.Roll,1);
000002  4921              LDR      r1,|L3.136|
000004  6848              LDR      r0,[r1,#4]  ; AngE
000006  f7fffffe          BL       __aeabi_f2d
00000a  4604              MOV      r4,r0
00000c  2001              MOVS     r0,#1
00000e  4622              MOV      r2,r4
000010  460b              MOV      r3,r1
000012  2128              MOVS     r1,#0x28
000014  9000              STR      r0,[sp,#0]
000016  f7fffffe          BL       Dis_Float
;;;103    	Dis_Float(2,40,AngE.Pitch,1);
00001a  491b              LDR      r1,|L3.136|
00001c  6808              LDR      r0,[r1,#0]  ; AngE
00001e  f7fffffe          BL       __aeabi_f2d
000022  4604              MOV      r4,r0
000024  2001              MOVS     r0,#1
000026  4622              MOV      r2,r4
000028  460b              MOV      r3,r1
00002a  2128              MOVS     r1,#0x28
00002c  9000              STR      r0,[sp,#0]
00002e  2002              MOVS     r0,#2
000030  f7fffffe          BL       Dis_Float
;;;104    	Dis_Float(3,40,AngE.Yaw,1);
000034  4914              LDR      r1,|L3.136|
000036  6888              LDR      r0,[r1,#8]  ; AngE
000038  f7fffffe          BL       __aeabi_f2d
00003c  4604              MOV      r4,r0
00003e  2001              MOVS     r0,#1
000040  4622              MOV      r2,r4
000042  460b              MOV      r3,r1
000044  2128              MOVS     r1,#0x28
000046  9000              STR      r0,[sp,#0]
000048  2003              MOVS     r0,#3
00004a  f7fffffe          BL       Dis_Float
;;;105      OLED_4num(4,5,RC_Data.YAW);
00004e  480f              LDR      r0,|L3.140|
000050  f9b0200e          LDRSH    r2,[r0,#0xe]  ; RC_Data
000054  2105              MOVS     r1,#5
000056  2004              MOVS     r0,#4
000058  f7fffffe          BL       OLED_4num
;;;106    	OLED_4num(4,6,RC_Data.THROTTLE);
00005c  480b              LDR      r0,|L3.140|
00005e  f9b0200c          LDRSH    r2,[r0,#0xc]  ; RC_Data
000062  2106              MOVS     r1,#6
000064  2004              MOVS     r0,#4
000066  f7fffffe          BL       OLED_4num
;;;107    	OLED_4num(57,5,RC_Data.ROLL);
00006a  4808              LDR      r0,|L3.140|
00006c  f9b02008          LDRSH    r2,[r0,#8]  ; RC_Data
000070  2105              MOVS     r1,#5
000072  2039              MOVS     r0,#0x39
000074  f7fffffe          BL       OLED_4num
;;;108    	OLED_4num(58,6,RC_Data.PITCH);
000078  4804              LDR      r0,|L3.140|
00007a  f9b0200a          LDRSH    r2,[r0,#0xa]  ; RC_Data
00007e  2106              MOVS     r1,#6
000080  203a              MOVS     r0,#0x3a
000082  f7fffffe          BL       OLED_4num
;;;109    }
000086  bd38              POP      {r3-r5,pc}
;;;110    
                          ENDP

                  |L3.136|
                          DCD      AngE
                  |L3.140|
                          DCD      RC_Data

                          AREA ||i.Sensor_Init||, CODE, READONLY, ALIGN=2

                  Sensor_Init PROC
;;;73     /*====================================================================================================*/
;;;74     void Sensor_Init(void)
000000  b510              PUSH     {r4,lr}
;;;75     {
;;;76     	flag.MpuExist = InitMPU6050();
000002  f7fffffe          BL       InitMPU6050
000006  4918              LDR      r1,|L4.104|
000008  7008              STRB     r0,[r1,#0]
;;;77     	flag.MagExist = Init_HMC5883L();
00000a  f7fffffe          BL       Init_HMC5883L
00000e  4916              LDR      r1,|L4.104|
000010  7048              STRB     r0,[r1,#1]
;;;78       flag.NrfExist = NRF24L01_Check();
000012  f7fffffe          BL       NRF24L01_Check
000016  4914              LDR      r1,|L4.104|
000018  7088              STRB     r0,[r1,#2]
;;;79       NRF24L01_Mode(1);
00001a  2001              MOVS     r0,#1
00001c  f7fffffe          BL       NRF24L01_Mode
;;;80     	
;;;81     
;;;82     	OLED_P6x8Str(0,1,"ROLL:");
000020  a212              ADR      r2,|L4.108|
000022  2101              MOVS     r1,#1
000024  2000              MOVS     r0,#0
000026  f7fffffe          BL       OLED_P6x8Str
;;;83     	OLED_P6x8Str(0,2,"PITCH:"); 
00002a  a212              ADR      r2,|L4.116|
00002c  2102              MOVS     r1,#2
00002e  2000              MOVS     r0,#0
000030  f7fffffe          BL       OLED_P6x8Str
;;;84     	OLED_P6x8Str(0,3,"YAW:");
000034  a211              ADR      r2,|L4.124|
000036  2103              MOVS     r1,#3
000038  2000              MOVS     r0,#0
00003a  f7fffffe          BL       OLED_P6x8Str
;;;85     	OLED_P6x8Str(0,5,"YAW:");
00003e  a20f              ADR      r2,|L4.124|
000040  2105              MOVS     r1,#5
000042  2000              MOVS     r0,#0
000044  f7fffffe          BL       OLED_P6x8Str
;;;86     	OLED_P6x8Str(0,6,"THR:");
000048  a20e              ADR      r2,|L4.132|
00004a  2106              MOVS     r1,#6
00004c  2000              MOVS     r0,#0
00004e  f7fffffe          BL       OLED_P6x8Str
;;;87     	OLED_P6x8Str(56,5,"ROLL:");
000052  a206              ADR      r2,|L4.108|
000054  2105              MOVS     r1,#5
000056  2038              MOVS     r0,#0x38
000058  f7fffffe          BL       OLED_P6x8Str
;;;88     	OLED_P6x8Str(56,6,"PITCH:"); 
00005c  a205              ADR      r2,|L4.116|
00005e  2106              MOVS     r1,#6
000060  2038              MOVS     r0,#0x38
000062  f7fffffe          BL       OLED_P6x8Str
;;;89     }
000066  bd10              POP      {r4,pc}
;;;90     
                          ENDP

                  |L4.104|
                          DCD      flag
                  |L4.108|
00006c  524f4c4c          DCB      "ROLL:",0
000070  3a00    
000072  00                DCB      0
000073  00                DCB      0
                  |L4.116|
000074  50495443          DCB      "PITCH:",0
000078  483a00  
00007b  00                DCB      0
                  |L4.124|
00007c  5941573a          DCB      "YAW:",0
000080  00      
000081  00                DCB      0
000082  00                DCB      0
000083  00                DCB      0
                  |L4.132|
000084  5448523a          DCB      "THR:",0
000088  00      
000089  00                DCB      0
00008a  00                DCB      0
00008b  00                DCB      0

                          AREA ||i.Time_slice||, CODE, READONLY, ALIGN=2

                  Time_slice PROC
;;;142    /*====================================================================================================*/
;;;143    void Time_slice(void)
000000  4815              LDR      r0,|L5.88|
;;;144    {
;;;145      static u16 tick[3]={0,0,0};
;;;146    	
;;;147    	tick[0]++;tick[1]++;tick[2]++;
000002  8800              LDRH     r0,[r0,#0]  ; tick
000004  1c40              ADDS     r0,r0,#1
000006  4914              LDR      r1,|L5.88|
000008  8008              STRH     r0,[r1,#0]
00000a  4608              MOV      r0,r1
00000c  8840              LDRH     r0,[r0,#2]  ; tick
00000e  1c40              ADDS     r0,r0,#1
000010  8048              STRH     r0,[r1,#2]
000012  4608              MOV      r0,r1
000014  8880              LDRH     r0,[r0,#4]  ; tick
000016  1c40              ADDS     r0,r0,#1
000018  8088              STRH     r0,[r1,#4]
;;;148    	
;;;149    	if(tick[0]>=2){
00001a  4608              MOV      r0,r1
00001c  8800              LDRH     r0,[r0,#0]  ; tick
00001e  2802              CMP      r0,#2
000020  db04              BLT      |L5.44|
;;;150    		 tick[0] = 0;
000022  2000              MOVS     r0,#0
000024  8008              STRH     r0,[r1,#0]
;;;151    		 flag.Loop_250Hz = 1;
000026  2001              MOVS     r0,#1
000028  490c              LDR      r1,|L5.92|
00002a  7288              STRB     r0,[r1,#0xa]
                  |L5.44|
;;;152    	}
;;;153      if(tick[1]>=5){
00002c  480a              LDR      r0,|L5.88|
00002e  8840              LDRH     r0,[r0,#2]  ; tick
000030  2805              CMP      r0,#5
000032  db05              BLT      |L5.64|
;;;154    		tick[1] = 0;
000034  2000              MOVS     r0,#0
000036  4908              LDR      r1,|L5.88|
000038  8048              STRH     r0,[r1,#2]
;;;155    		flag.Loop_100Hz = 1;
00003a  2001              MOVS     r0,#1
00003c  4907              LDR      r1,|L5.92|
00003e  72c8              STRB     r0,[r1,#0xb]
                  |L5.64|
;;;156    	}	
;;;157      if(tick[2] >= 50)	{
000040  4805              LDR      r0,|L5.88|
000042  8880              LDRH     r0,[r0,#4]  ; tick
000044  2832              CMP      r0,#0x32
000046  db05              BLT      |L5.84|
;;;158    		tick[2] = 0;
000048  2000              MOVS     r0,#0
00004a  4903              LDR      r1,|L5.88|
00004c  8088              STRH     r0,[r1,#4]
;;;159    		flag.Loop_10Hz = 1;
00004e  2001              MOVS     r0,#1
000050  4902              LDR      r1,|L5.92|
000052  7308              STRB     r0,[r1,#0xc]
                  |L5.84|
;;;160    	}
;;;161    }
000054  4770              BX       lr
;;;162    
                          ENDP

000056  0000              DCW      0x0000
                  |L5.88|
                          DCD      tick
                  |L5.92|
                          DCD      flag

                          AREA ||i.loop||, CODE, READONLY, ALIGN=2

                  loop PROC
;;;112    
;;;113    void loop(void)
000000  b510              PUSH     {r4,lr}
;;;114    {
;;;115    	// 250HZ
;;;116    	if(flag.Loop_250Hz){
000002  480e              LDR      r0,|L6.60|
000004  7a80              LDRB     r0,[r0,#0xa]  ; flag
000006  b130              CBZ      r0,|L6.22|
;;;117    		flag.Loop_250Hz=0;
000008  2000              MOVS     r0,#0
00000a  490c              LDR      r1,|L6.60|
00000c  7288              STRB     r0,[r1,#0xa]
;;;118    		UsbCmdPro();
00000e  f7fffffe          BL       UsbCmdPro
;;;119        FailSafeLEDAlarm();
000012  f7fffffe          BL       FailSafeLEDAlarm
                  |L6.22|
;;;120    	}
;;;121    	
;;;122    	// 100HZ
;;;123    	if(flag.Loop_100Hz){
000016  4809              LDR      r0,|L6.60|
000018  7ac0              LDRB     r0,[r0,#0xb]  ; flag
00001a  b130              CBZ      r0,|L6.42|
;;;124    		flag.Loop_100Hz=0;
00001c  2000              MOVS     r0,#0
00001e  4907              LDR      r1,|L6.60|
000020  72c8              STRB     r0,[r1,#0xb]
;;;125        mavlink();
000022  f7fffffe          BL       mavlink
;;;126    		Screen_Update();
000026  f7fffffe          BL       Screen_Update
                  |L6.42|
;;;127    	}
;;;128    		if(flag.Loop_10Hz){
00002a  4804              LDR      r0,|L6.60|
00002c  7b00              LDRB     r0,[r0,#0xc]  ; flag
00002e  b120              CBZ      r0,|L6.58|
;;;129    		flag.Loop_10Hz=0;
000030  2000              MOVS     r0,#0
000032  4902              LDR      r1,|L6.60|
000034  7308              STRB     r0,[r1,#0xc]
;;;130        EE_SAVE_Attitude_PID();
000036  f7fffffe          BL       EE_SAVE_Attitude_PID
                  |L6.58|
;;;131    	}
;;;132    }
00003a  bd10              POP      {r4,pc}
;;;133    
                          ENDP

                  |L6.60|
                          DCD      flag

                          AREA ||.bss||, DATA, NOINIT, ALIGN=0

                  flag
                          %        13

                          AREA ||.data||, DATA, ALIGN=2

                  Battery_Voltage
                          DCD      0x00000000
                  tick
000004  00000000          DCW      0x0000,0x0000
000008  0000              DCW      0x0000
