; generated by ARM C/C++ Compiler, 4.1 [Build 481]
; commandline ArmCC [--c99 --split_sections --debug -c --asm --interleave -o.\Flash\Obj\multirotor_app.o --depend=.\Flash\Obj\multirotor_app.d --cpu=Cortex-M3 --apcs=interwork -O0 -I..\..\Libraries\CMSIS\CM3\CoreSupport -I..\..\Libraries\CMSIS\CM3\DeviceSupport\ST\STM32F10x -I..\..\Libraries\STM32F10x_StdPeriph_Driver\inc -I..\..\Libraries\STM32_USB-FS-Device_Driver\inc -I..\..\User\usb_virture_com -I..\..\User -I..\..\User\bsp -I..\..\User\Driver\IIC -I..\..\User\Driver\LED -I..\..\User\Driver\TIM -I..\..\User\Driver\SPI -I..\..\User\Driver\ADC -I..\..\User\Driver\Delay -I..\..\User\Driver\UART -I..\..\User\Driver\MOTOR -I..\..\User\Driver\PWM_IN -I..\..\User\Driver\EEPROM -I..\..\User\Modules\Modules_mpu6050 -I..\..\User\Modules\Modules_nrf24L01 -I..\..\User\Modules\Modules_hmc5883 -I..\..\User\Algorithm\Algorithm_filter -I..\..\User\Algorithm\Algorithm_math -I..\..\User\Algorithm\Algorithm_sqLite -I..\..\User\Algorithm\Algorithm_quaternion -I..\..\User\Function\MultiRotor_rc -I..\..\User\Function\MultiRotor_app -I..\..\User\Function\MultiRotor_ahrs -I..\..\User\Function\MultiRotor_radio -I..\..\User\Function\MultiRotor_control -I..\..\User\Modules\Modules_oled -I"D:\KEIL MDK\ARM\INC" -I"D:\KEIL MDK\ARM\INC\ST\STM32F10x" -D__MICROLIB -DSTM32F10X_HD -DUSE_STDPERIPH_DRIVER --omf_browse=.\Flash\Obj\multirotor_app.crf ..\..\User\Function\MultiRotor_app\MultiRotor_app.c]
                          THUMB

                          AREA ||i.InitBoard||, CODE, READONLY, ALIGN=1

                  InitBoard PROC
;;;26     /*====================================================================================================*/
;;;27     void InitBoard(void)
000000  b510              PUSH     {r4,lr}
;;;28     {
;;;29     	 delay_init(72);
000002  2048              MOVS     r0,#0x48
000004  f7fffffe          BL       delay_init
;;;30     	 Nvic_Init();
000008  f7fffffe          BL       Nvic_Init
;;;31        LED_GPIO_Config();
00000c  f7fffffe          BL       LED_GPIO_Config
;;;32        i2cInit(I2CDEV_2);
000010  2001              MOVS     r0,#1
000012  f7fffffe          BL       i2cInit
;;;33     	 TIM3_Config();
000016  f7fffffe          BL       TIM3_Config
;;;34     	 PWM_OUT_Config();
00001a  f7fffffe          BL       PWM_OUT_Config
;;;35     	 PWM_IN_Config();
00001e  f7fffffe          BL       PWM_IN_Config
;;;36     	 ADC1_Init();	
000022  f7fffffe          BL       ADC1_Init
;;;37     	 OLED_Init();
000026  f7fffffe          BL       OLED_Init
;;;38     	 //NRF24L01_Init();
;;;39      	 LED_SHOW();
00002a  f7fffffe          BL       LED_SHOW
;;;40      	 FLASH_Unlock();
00002e  f7fffffe          BL       FLASH_Unlock
;;;41      	 EE_Init();
000032  f7fffffe          BL       EE_Init
;;;42     
;;;43     }
000036  bd10              POP      {r4,pc}
;;;44     
                          ENDP


                          AREA ||i.Screen_Update||, CODE, READONLY, ALIGN=2

                  Screen_Update PROC
;;;79     /*====================================================================================================*/
;;;80     void Screen_Update(void)
000000  b538              PUSH     {r3-r5,lr}
;;;81     {
;;;82     	Dis_Float(1,40,AngE.Roll,1);
000002  4922              LDR      r1,|L2.140|
000004  6848              LDR      r0,[r1,#4]  ; AngE
000006  f7fffffe          BL       __aeabi_f2d
00000a  4604              MOV      r4,r0
00000c  2301              MOVS     r3,#1
00000e  4602              MOV      r2,r0
000010  9300              STR      r3,[sp,#0]
000012  460b              MOV      r3,r1
000014  2128              MOVS     r1,#0x28
000016  2001              MOVS     r0,#1
000018  f7fffffe          BL       Dis_Float
;;;83     	Dis_Float(2,40,AngE.Pitch,1);
00001c  491b              LDR      r1,|L2.140|
00001e  6808              LDR      r0,[r1,#0]  ; AngE
000020  f7fffffe          BL       __aeabi_f2d
000024  4604              MOV      r4,r0
000026  2301              MOVS     r3,#1
000028  4602              MOV      r2,r0
00002a  9300              STR      r3,[sp,#0]
00002c  460b              MOV      r3,r1
00002e  2128              MOVS     r1,#0x28
000030  2002              MOVS     r0,#2
000032  f7fffffe          BL       Dis_Float
;;;84     	Dis_Float(3,40,AngE.Yaw,1);
000036  4915              LDR      r1,|L2.140|
000038  6888              LDR      r0,[r1,#8]  ; AngE
00003a  f7fffffe          BL       __aeabi_f2d
00003e  4604              MOV      r4,r0
000040  2301              MOVS     r3,#1
000042  4602              MOV      r2,r0
000044  9300              STR      r3,[sp,#0]
000046  460b              MOV      r3,r1
000048  2128              MOVS     r1,#0x28
00004a  2003              MOVS     r0,#3
00004c  f7fffffe          BL       Dis_Float
;;;85       OLED_4num(4,5,RC_Data.YAW);
000050  480f              LDR      r0,|L2.144|
000052  f9b0200e          LDRSH    r2,[r0,#0xe]  ; RC_Data
000056  2105              MOVS     r1,#5
000058  2004              MOVS     r0,#4
00005a  f7fffffe          BL       OLED_4num
;;;86     	OLED_4num(4,6,RC_Data.THROTTLE);
00005e  480c              LDR      r0,|L2.144|
000060  f9b0200c          LDRSH    r2,[r0,#0xc]  ; RC_Data
000064  2106              MOVS     r1,#6
000066  2004              MOVS     r0,#4
000068  f7fffffe          BL       OLED_4num
;;;87     	OLED_4num(57,5,RC_Data.ROLL);
00006c  4808              LDR      r0,|L2.144|
00006e  f9b02008          LDRSH    r2,[r0,#8]  ; RC_Data
000072  2105              MOVS     r1,#5
000074  2039              MOVS     r0,#0x39
000076  f7fffffe          BL       OLED_4num
;;;88     	OLED_4num(58,6,RC_Data.PITCH);
00007a  4805              LDR      r0,|L2.144|
00007c  f9b0200a          LDRSH    r2,[r0,#0xa]  ; RC_Data
000080  2106              MOVS     r1,#6
000082  203a              MOVS     r0,#0x3a
000084  f7fffffe          BL       OLED_4num
;;;89     }
000088  bd38              POP      {r3-r5,pc}
                          ENDP

00008a  0000              DCW      0x0000
                  |L2.140|
                          DCD      AngE
                  |L2.144|
                          DCD      RC_Data

                          AREA ||i.Sensor_Init||, CODE, READONLY, ALIGN=2

                  Sensor_Init PROC
;;;53     /*====================================================================================================*/
;;;54     void Sensor_Init(void)
000000  b510              PUSH     {r4,lr}
;;;55     {
;;;56     	flag.MpuExist = InitMPU6050();
000002  f7fffffe          BL       InitMPU6050
000006  4915              LDR      r1,|L3.92|
000008  7008              STRB     r0,[r1,#0]
;;;57     	flag.MagExist = Init_HMC5883L();
00000a  f7fffffe          BL       Init_HMC5883L
00000e  4913              LDR      r1,|L3.92|
000010  7048              STRB     r0,[r1,#1]
;;;58     //  	Init_State.NRF2401_State = NRF24L01_Check();
;;;59     //  	NRF24L01_Mode(1);
;;;60     	  
;;;61     	  OLED_P6x8Str(0,1,"ROLL:");
000012  a213              ADR      r2,|L3.96|
000014  2101              MOVS     r1,#1
000016  2000              MOVS     r0,#0
000018  f7fffffe          BL       OLED_P6x8Str
;;;62     	  OLED_P6x8Str(0,2,"PITCH:"); 
00001c  a212              ADR      r2,|L3.104|
00001e  2102              MOVS     r1,#2
000020  2000              MOVS     r0,#0
000022  f7fffffe          BL       OLED_P6x8Str
;;;63     	  OLED_P6x8Str(0,3,"YAW:");
000026  a212              ADR      r2,|L3.112|
000028  2103              MOVS     r1,#3
00002a  2000              MOVS     r0,#0
00002c  f7fffffe          BL       OLED_P6x8Str
;;;64     	
;;;65     	  OLED_P6x8Str(0,5,"YAW:");
000030  a20f              ADR      r2,|L3.112|
000032  2105              MOVS     r1,#5
000034  2000              MOVS     r0,#0
000036  f7fffffe          BL       OLED_P6x8Str
;;;66     	  OLED_P6x8Str(0,6,"THR:");
00003a  a20f              ADR      r2,|L3.120|
00003c  2106              MOVS     r1,#6
00003e  2000              MOVS     r0,#0
000040  f7fffffe          BL       OLED_P6x8Str
;;;67     	  OLED_P6x8Str(56,5,"ROLL:");
000044  a206              ADR      r2,|L3.96|
000046  2105              MOVS     r1,#5
000048  2038              MOVS     r0,#0x38
00004a  f7fffffe          BL       OLED_P6x8Str
;;;68     	  OLED_P6x8Str(56,6,"PITCH:"); 
00004e  a206              ADR      r2,|L3.104|
000050  2106              MOVS     r1,#6
000052  2038              MOVS     r0,#0x38
000054  f7fffffe          BL       OLED_P6x8Str
;;;69     }
000058  bd10              POP      {r4,pc}
;;;70     
                          ENDP

00005a  0000              DCW      0x0000
                  |L3.92|
                          DCD      flag
                  |L3.96|
000060  524f4c4c          DCB      "ROLL:",0
000064  3a00    
000066  00                DCB      0
000067  00                DCB      0
                  |L3.104|
000068  50495443          DCB      "PITCH:",0
00006c  483a00  
00006f  00                DCB      0
                  |L3.112|
000070  5941573a          DCB      "YAW:",0
000074  00      
000075  00                DCB      0
000076  00                DCB      0
000077  00                DCB      0
                  |L3.120|
000078  5448523a          DCB      "THR:",0
00007c  00      
00007d  00                DCB      0
00007e  00                DCB      0
00007f  00                DCB      0

                          AREA ||.bss||, DATA, NOINIT, ALIGN=0

                  flag
                          %        9

                          AREA ||.data||, DATA, ALIGN=2

                  Battery_Voltage
                          DCD      0x00000000
